//problem A:
#include<bits/stdc++.h>
using namespace std;

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t;
    cin>>t;
    while(t--){
       int n,m,k;
       string a,b;
       string c="";
       cin>>n>>m>>k;
       cin>>a>>b;

       int counta=0;
       int countb=0;
       int i=0;
       int j=0;

       sort(a.begin(),a.end());
       sort(b.begin(),b.end());

       while(i!=n&&j!=m){
          if(a[i]<b[j]){
            if(counta<k){
                c=c+a[i++];
            counta++;
            countb=0;
            }else{
                c=c+b[j++];
            countb++;
            counta=0;
            }
          }else{
            if(countb<k){
                c=c+b[j++];
            countb++;
            counta=0;
            }else{
                c=c+a[i++];
            counta++;
            countb=0;
            }
          }
       }
       cout<<c<<endl;
    }
    return 0;
}

//problem B:
#include<bits/stdc++.h>
using namespace std;
 
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t;
    cin>>t;
 
    while(t--){
       int n;
       cin>>n;
       vector<int> v(n);
       vector<int> ans;
       priority_queue<int,vector<int>,greater<int>> q;
 
       for(int i=0;i<n;i++){
        cin>>v[i];
        q.push(v[i]);
       }
       if(n==1){
        cout<<"-1\n";
       }
       else{
        int p1=0;
       while(!q.empty()){
          if(v[p1]!=q.top()){
            ans.push_back(q.top());
            q.pop();
            p1++;
          }else{
             int temp=q.top();
             q.pop();
             ans.push_back(q.top());
             q.pop();
             p1++;
             q.push(temp);
          }
       }
    
       if(ans[n-1]==v[n-1]){
        swap(ans[n-1],ans[n-2]);
       }
       for(int i=0;i<n;i++)
       cout<<ans[i]<<" ";
       cout<<"\n";
       }
       
    }
}
